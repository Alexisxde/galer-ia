---
import Button from "@/components/ui/button.astro"
import AsideLayout from "@/layouts/AsideLayout.astro"
import GenerateHero from "@/components/generate-hero.astro"
const { userId } = Astro.locals.auth()

if (userId === null) {
	return Astro.redirect("/sign-in")
}

const TEST = []
---

<AsideLayout title="Generate images with AI" name="Generate">
	<div id="chat-container" class="mx-auto flex size-full flex-col items-center">
		<div id="chat" class="flex w-full max-w-4xl flex-grow flex-col py-5">
			{
				TEST.length === 0 ? (
					<GenerateHero />
				) : (
					TEST.map(({ src, prompt }) => (
						<div class="mb-4 flex w-full flex-col gap-4 px-4">
							<div class="flex w-full items-center justify-between">
								<div />
								<p class="rounded-md bg-neutral-800 p-4 text-center text-sm text-neutral-300">
									{prompt}
								</p>
							</div>
							<div class="flex w-full">
								<img src={src} class="mb-2 max-w-2xs rounded-md" />
							</div>
						</div>
					))
				)
			}
		</div>
		<div
			class="sticky bottom-0 flex w-full items-center gap-2 border-t border-neutral-800 bg-neutral-900 p-4">
			<form
				id="form-input"
				class="mx-auto flex w-full max-w-3xl flex-col gap-4">
				<textarea
					autocomplete="off"
					placeholder="Type your prompt here..."
					name="prompt"
					class="h-16 w-full cursor-default resize-none rounded-md border border-neutral-800 bg-neutral-900 p-3.5 text-sm text-neutral-100 transition-colors duration-500 placeholder:text-neutral-500 placeholder:select-none focus:border-neutral-700 focus:outline-none md:h-24"
				></textarea>
				<p data-error class="hidden text-xs text-red-500">
					Please enter a prompt
				</p>
				<div class="flex w-full items-center justify-end">
					<Button variant="outline" type="submit" class="max-w-xs">
						Generate
					</Button>
				</div>
			</form>
		</div>
	</div>
</AsideLayout>

<script>
	import { $ } from "@/lib/dom-selector"
	import { scrollToBottom } from "@/lib/utils"

	scrollToBottom("#chat-container")

	$("#form-input")?.addEventListener("submit", async e => {
		e.preventDefault()
		const formData = new FormData(e.target)
		const prompt_text = formData.get("prompt")
		if (!prompt) {
			$('[name="prompt"]')?.classList.remove("border-neutral-800")
			$('[name="prompt"]')?.classList.add("border-red-800")
			$("[data-error]")?.classList.remove("hidden")
			setTimeout(() => {
				$("[data-error]")?.classList.add("hidden")
				$('[name="prompt"]')?.classList.remove("border-red-800")
				$('[name="prompt"]')?.classList.add("border-neutral-800")
			}, 2000)
			return
		}

		const textarea = $('[name="prompt"]') as HTMLTextAreaElement
		const button = $('[type="submit"]') as HTMLButtonElement
		textarea.disabled = true
		textarea.style.opacity = "0.5"
		textarea.style.pointerEvents = "none"
		button.disabled = true
		button.innerText = "Generating..."
		const chat = $("#chat-delete")
		if (chat) {
			chat.remove()
		}

		try {
			const response = await fetch("/api/generate", {
				method: "POST",
				body: JSON.stringify({ prompt: prompt_text }),
				headers: { "Content-Type": "application/json" }
			})
			const {
				prompt,
				image_url
			}: { id: string; prompt: string; image_url: string } =
				await response.json()
			$("#chat")?.insertAdjacentHTML(
				"beforeend",
				`<div class="mb-4 flex w-full flex-col gap-4 px-4">
						<div class="flex w-full items-center justify-between">
							<div></div>
							<p class="rounded-md bg-neutral-800 p-4 text-center text-sm text-neutral-300">
                ${prompt}
							</p>
						</div>
						<div class="flex w-full">
							<img src="${image_url}" class="mb-2 max-w-2xs rounded-md" />
						</div>
					</div>
      `
			)
			scrollToBottom("#chat-container")
			console.log({ prompt, image_url })
		} catch (error) {
			console.error("Error:", error)
		} finally {
			textarea.disabled = false
			button.disabled = false
			button.innerText = "Generate"
			textarea.style.opacity = "1"
			textarea.style.pointerEvents = "auto"
			textarea.value = ""
		}
	})
</script>
